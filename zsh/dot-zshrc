
# Path to your oh-my-zsh installation.
#export ZSH="$HOME/.oh-my-zsh"

##########
# HISTORY
##########
HISTFILE=$HOME/.zsh_history
HISTSIZE=50000
SAVEHIST=50000

setopt EXTENDED_HISTORY
setopt HIST_VERIFY
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Dont record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Dont record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Dont write duplicate entries in the history file.

setopt inc_append_history
setopt share_history



##########
# THEME
##########

ZSH_THEME="robbyrussell"


##########
# PLUGINS
##########
#plugins=(git)
source $ZSH/oh-my-zsh.sh

##########
# KEYBINDINGS
##########
bindkey -v # v for vi mode, e for emacs mode

bindkey -M vicmd "k" up-line-or-beginning-search
bindkey -M vicmd "j" down-line-or-beginning-search

bindkey -M vicmd v edit-command-line
bindkey -M vicmd 'b' vi-backward-word

# Use Ctrl-P (previous) and Ctrl-N (next) for navigating the autosuggest list
bindkey '^P' up-line-or-beginning-search
bindkey '^N' down-line-or-beginning-search

export EDITOR=nvim


alias youtube-to-mp3="yt-dlp -x --audio-format mp3 --concat-playlist always --yes-playlist"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/nathankoerschner/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/nathankoerschner/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/nathankoerschner/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/nathankoerschner/google-cloud-sdk/completion.zsh.inc'; fi




export PATH="/Users/nathankoerschner/.local/bin/:$PATH"
alias bigquery-query='bq query --use_legacy_sql=false'
alias generate-iphone-8plus-sized-screenshot-from-iphone-se-screenshot='magick convert  -resize 1242x2209 -crop 1242x2208+0+0'
export PATH="/opt/homebrew/opt/postgresql@15/bin:$PATH"
export PATH="/usr/local/opt/sqlite/bin:$PATH"
export PATH=$PATH:$HOME/go/bin



[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


# edit command line for emacs mode
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^X^E' edit-command-line
# export FZF_DEFAULT_OPTS='--bind "ctrl-j:down,ctrl-k:up,alt-j:preview-down,alt-k:preview-up"'
bindkey "ç" fzf-cd-widget # step around mac default alt + c



#pyenv
#export PYENV_ROOT="$HOME/.pyenv"
#command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
#eval "$(pyenv init -)"

#########
# PROMPT
#########

setopt prompt_subst

git_prompt_info() {
  local dirstatus=" OK"
  local dirty="%{$fg_bold[red]%} X%{$reset_color%}"

  if [[ ! -z $(git status --porcelain 2> /dev/null | tail -n1) ]]; then
    dirstatus=$dirty
  fi

  ref=$(git symbolic-ref HEAD 2> /dev/null) || \
  ref=$(git rev-parse --short HEAD 2> /dev/null) || return
  echo " %{$fg_bold[green]%}${ref#refs/heads/}$dirstatus%{$reset_color%}"
}

# local dir_info_color="$fg_bold[black]"

# This just sets the color to "bold".
# Future me. Try this to see what's correct:
#   $ print -P '%fg_bold[black] black'
#   $ print -P '%B%F{black} black'
#   $ print -P '%B black'
local dir_info_color="%B"

local dir_info_color_file="${HOME}/.zsh.d/dir_info_color"
if [ -r ${dir_info_color_file} ]; then
  source ${dir_info_color_file}
fi

local dir_info="%{$dir_info_color%}%(5~|%-1~/.../%2~|%4~)%{$reset_color%}"
local promptnormal="φ %{$reset_color%}"
local promptjobs="%{$fg_bold[red]%}φ %{$reset_color%}"


# Show how many nested `nix shell`s we are in
# local nix_prompt=""
# # Set ORIG_SHLVL only if it wasn't previously set and if SHLVL > 1 and
# # GHOSTTY_RESOURCES_DIR is not empty
# if [[ -z $ORIG_SHLVL ]]; then
#   if [[ -z $GHOSTTY_RESOURCES_DIR ]]; then
#     export ORIG_SHLVL=$SHLVL
#   elif  [[ $SHLVL -gt 1 ]]; then
#     export ORIG_SHLVL=$SHLVL
#   fi
# fi;
# # If ORIG_SHLVL is set and SHLVL is now greater: display nesting level
# if [[ ! -z $ORIG_SHLVL && $SHLVL -gt $ORIG_SHLVL ]]; then
#   nix_prompt=("(%F{yellow}$(($SHLVL - $ORIG_SHLVL))%f) ")
# fi;

PROMPT='${dir_info}$(git_prompt_info) ${nix_prompt}%(1j.$promptjobs.$promptnormal)'

simple_prompt() {
  local prompt_color="%B"
  export PROMPT="%{$prompt_color%}$promptnormal"
}
